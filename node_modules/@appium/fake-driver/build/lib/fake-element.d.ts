export class FakeElement {
    /**
     * @param {any} xmlNode
     * @param {FakeApp} app
     */
    constructor(xmlNode: any, app: FakeApp);
    /** @type {FakeApp} */
    app: FakeApp;
    /** @type {string} */
    type: string;
    /** @type {Record<string,string>} */
    nodeAttrs: Record<string, string>;
    node: any;
    attrs: {};
    css: {};
    parseCss(): void;
    get tagName(): any;
    setAttr(k: any, v: any): void;
    getAttr(k: any): any;
    isVisible(): boolean;
    isEnabled(): boolean;
    isSelected(): boolean;
    getLocation(): {
        x: number;
        y: number;
    };
    getElementRect(): {
        width: number;
        height: number;
        x: number;
        y: number;
    };
    getSize(): {
        width: number;
        height: number;
    };
    click(): void;
    equals(other: any): boolean;
    hasPrompt(): boolean;
    getCss(prop: any): null;
    get xmlFragment(): XMLDom.Document;
}
export type FakeApp = import("./fake-app").FakeApp;
import XMLDom from '@xmldom/xmldom';
//# sourceMappingURL=fake-element.d.ts.map