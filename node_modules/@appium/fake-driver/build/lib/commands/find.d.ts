import { Element } from '@appium/types';
import { FakeElement } from '../fake-element';
import { FakeDriver } from '../driver';
interface FakeDriverFindMixin {
    getExistingElementForNode(node: FakeElement): string | null;
    wrapNewEl(obj: FakeElement): Element;
    findElOrEls(this: FakeDriver, strategy: string, selector: string, mult: true, context?: any): Promise<Element[]>;
    findElOrEls(this: FakeDriver, strategy: string, selector: string, mult: false, context?: any): Promise<Element>;
    findElement(strategy: string, selector: string): Promise<Element>;
    findElements(strategy: string, selector: string): Promise<Element[]>;
    findElementFromElement(elementId: string, strategy: string, selector: string): Promise<Element>;
    findElementsFromElement(elementId: string, strategy: string, selector: string): Promise<Element[]>;
}
declare module '../driver' {
    interface FakeDriver extends FakeDriverFindMixin {
    }
}
export {};
//# sourceMappingURL=find.d.ts.map